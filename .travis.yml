language: cpp

matrix:
  include:

  - name: Ubuntu Linux 14.04, GCC 4.7 (executable, murphi2c, murphi2xml)
    os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - deadsnakes
          - ubuntu-toolchain-r-test
        packages:
          - g++-4.7
          - libxml2-utils
          - python3.6
          - valgrind
    env:
      - TEST_ARGS="executable murphi2c murphi2cHeader murphi2xml"
      # force Python 3 to point to 3.6 instead of 3.4.3
      - MATRIX_EVAL="sudo ln -sf /usr/bin/python3.6 /usr/bin/python3 && CC=gcc-4.7 && CXX=g++-4.7"
      # Fail on a compilation warning, emit debug symbols, support full back
      # traces.
      - CXXFLAGS="-Werror -g -fno-omit-frame-pointer"

  - name: Ubuntu Linux 20.04, Clang 8 (rumur multithreaded XML)
    os: linux
    dist: focal
    addons:
      apt:
        packages:
          - clang-8
          - libfl-dev
          - libxml2-utils
          - valgrind
          - z3
    env:
      - TEST_ARGS="rumurOptimisedMultithreadedXML rumurMultithreadedXML"
      - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
      - CXXFLAGS="-pedantic -Werror -g -fno-omit-frame-pointer -fsanitize=undefined -fno-sanitize-recover=undefined"
      - UBSAN_OPTIONS=print_stacktrace=1

  - name: Ubuntu Linux 20.04, GCC, arm64
    arch: arm64
    os: linux
    dist: focal
    addons:
      apt:
        packages:
          - libxml2-utils
          - valgrind
    env:
      - MATRIX_EVAL=""
      - CXXFLAGS="-Werror -g -fno-omit-frame-pointer"

  - name: Ubuntu Linux 20.04, GCC, ppc64le
    arch: ppc64le
    os: linux
    dist: focal
    addons:
      apt:
        packages:
          - libxml2-utils
          - valgrind
    env:
      - MATRIX_EVAL=""
      - CXXFLAGS="-Werror -g -fno-omit-frame-pointer"

  - name: Ubuntu Linux 20.04, GCC, s390x
    arch: s390x
    os: linux
    dist: focal
    addons:
      apt:
        packages:
          - libxml2-utils
          - valgrind
    env:
      - MATRIX_EVAL=""
      - CXXFLAGS="-Werror -g -fno-omit-frame-pointer"

  - name: Ubuntu Linux 20.04, GCC 10, AFL
    os: linux
    dist: focal
    addons:
      apt:
        packages:
          - g++-10
          - libfl-dev
    env:
      # install AFL and let it catch crashes via core dumps
      - MATRIX_EVAL="echo core | sudo tee /proc/sys/kernel/core_pattern && ./misc/install-afl.sh && CC=gcc-10 && CXX=afl-g++"

      # quit if we succeed exhaustively fuzzing (unlikely)
      - AFL_EXIT_WHEN_DONE=1

      # suppress normal animated UI and use periodic text output
      - AFL_NO_UI=1

      # enable ASan and UBSan
      - CXXFLAGS="-g -fsanitize=address,undefined -fno-sanitize-recover=undefined -O3"

      - CUSTOM_COMMAND="travis_wait 60 ../misc/afl-wrapper.sh"

before_install:
  - eval "${MATRIX_EVAL}"

script:
  - uname -sr && python3 --version && printf 'processors: ' && getconf _NPROCESSORS_ONLN && mkdir build && cd build && cmake .. && cmake --build . -- -j$(getconf _NPROCESSORS_ONLN) && sudo env "PATH=$PATH" cmake --build . -- install && if [ -z "${CUSTOM_COMMAND}" ]; then env PATH=./rumur:./murphi2c:./murphi2murphi:./murphi2xml:./tests/murphi-comment-ls:${PATH} ../tests/run-tests.py --verbose ${TEST_ARGS}; else eval "${CUSTOM_COMMAND}"; fi
