.TH RUMUR 1
.SH NAME
rumur \- Yet another explicit state model checker
.SH SYNOPSIS
.B \fBrumur\fR \fBoptions\fR \fB--output\fR \fIFILE\fR [\fIFILE\fR]\fR
.SH DESCRIPTION
Rumur is a reimplementation of the model checker CMurphi with an expanded
feature set and improved performance.
.SH OPTIONS
\fB--[no-colour]\fR
.RS
Enable or disable the use of ANSI colour codes in the checker's output. The
default is to auto-detect based on whether the checker's stdout is a TTY.
.RE
.PP
\fB--[no-]deadlock-detection\fR
.RS
Enable or disable deadlock detection. Rumur has the ability to generate a
checker that notices when there is no valid transition out of a state and raise
an error in this scenario. This is enabled by default. However, whether such a
deadlock actually represents a problem depends on the properties of the system
you are modelling. Hence you may want to disable deadlock detection.
.RE
.PP
\fB--debug\fR or \fB-d\fR
.RS
Enable debugging options in the generated checker. This includes enabling
runtime assertions. This will also output debugging messages while generating
the checker.
.RE
.PP
\fB--help\fR
.RS
Display this information.
.RE
.PP
\fB--monopolise\fR
.RS
Assume that the machine the generated checker will run on is the current host
and that it will be the only process running. This flag causes the checker to
upfront allocate a seen set that will eventually occupy all of memory. That is,
it is the same as passing \fB--set-expand-threshold 100\fR and
\fB--set-capacity\fR with the total amount of physical memory available on the
current machine.
.RE
.PP
\fB--quiet\fR or \fB-q\fR
.RS
Don't output any messages while generating the checker.
.RE
.PP
\fB--sandbox\fR [\fBon\fR | \fBoff\fR]
.RS
Control whether the generated checker uses your operating system's sandboxing
facilities to limit its own operations. The checker does not intentionally
perform any malicious or dangerous operations, but at the end of the day it is a
generated program that you are going to execute. To safeguard against a bug in
the code generator, it is recommended to constrain the operations the checker is
allowed to perform. By default this is enabled.
.RE
.PP
\fB--set-capacity\fR \fISIZE\fR or \fB-s\fR \fISIZE\fR
.RS
The size of the initial set to allocate for storing seen states. This is given
in bytes and is interpreted to mean the desired size of the set when it is
completely full. That is, the initial allocation performed will be for a number
of "state slots" that, when all occupied, will consume this much memory. Default
value for this 8MB.
.RE
.PP
\fB--set-expand-threshold\fR \fIPERCENT\fR or \fB-e\fR \fIPERCENT\fR
.RS
Expand the state set when its occupancy exceeds this percentage. Default is
\fI65\fR, valid values are \fI1\fR - \fI100\fR. Setting a value of 100 will
result in the set only expanding when completely full. This may sound ideal, but
will actually result in a much longer runtime.
.RE
.PP
\fB--symmetry-reduction\fR [\fBon\fR | \fBoff\fR]
.RS
Enable or disable symmetry reduction. Symmetry reduction is an optimisation that
decreases the state space that must be searched by deriving a canonical
representation of each state. While two states may not be directly equal, if
their canonical representations are the same only one of them need be expanded.
To take advantage of this optimisation you must be using named \fBscalarset\fR
types. For more information, refer to the Murphi user manual. This option is
enabled by default.
.RE
.PP
\fB--threads\fR \fICOUNT\fR or \fB-t\fR \fICOUNT\fR
.RS
Specify the number of threads the checker should use. If you do not specify this
parameter or pass \fI0\fR, the number of threads will be chosen based on the
available hardware threads on the platform on which you generate the model.
.RE
.PP
\fB--trace\fR \fICATEGORY\fR
.RS
Enable tracing of specific events while checking. This option is for debugging
Rumur itself, and lets you generate a checker that writes events to stderr.
Available event categories are:
.PP
.RS
* \fIhandle_reads\fR Reads from variable handles
.br
* \fIhandle_writes\fR Writes to variable handles
.br
* \fIqueue\fR Events relating to the pending state queue
.br
* \fIset\fR Events relating to the seen state set
.br
* \fIsymmetry_reduction\fR Events related to the symmetry reduction optimisation
.br
* \fIall\fR Enable all of the above
.RE
.PP
More than one of these can be enabled at once by passing the \fB--trace\fR
argument multiple times. Note that enabling tracing will significantly slow the
checker and is only intended for debugging purposes.
.RE
.PP
\fB--verbose\fR or \fB-v\fR
.RS
Output informational messages while generating the checker.
.RE
.SH AUTHOR
All comments, questions and complaints should be directed to Matthew Fernandez
<matthew.fernandez@gmail.com>.
.SH NOTES
This tool is free and open source. It includes the xxHash code whose licence
follows.
.PP
.RS
xxHash Library
.br
Copyright (c) 2012-2014, Yann Collet
.br
All rights reserved.
.PP
Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:
.PP
* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.
following disclaimer.
.PP
* Redistributions in binary form must reproduce the above copyright notice, this
  list of conditions and the following disclaimer in the documentation and/or
  other materials provided with the distribution.
.PP
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.PP
.RE
All other elements of this program are in the public domain.
